"""Initial migration

Revision ID: f467c2406cde
Revises: 
Create Date: 2025-07-06 13:26:01.097279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f467c2406cde'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('social_accounts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('provider_user_id', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    op.drop_index('login_history_2025_07_user_id_idx', table_name='login_history_2025_07')
    op.drop_index('login_history_2025_07_login_at_idx', table_name='login_history_2025_07')
    op.drop_table('login_history_2025_07')

    op.drop_index('ix_login_history_user_id', table_name='login_history')
    op.drop_index('ix_login_history_login_at', table_name='login_history')
    op.drop_table('login_history')

    op.drop_index('login_history_2025_06_user_id_idx', table_name='login_history_2025_06')
    op.drop_index('login_history_2025_06_login_at_idx', table_name='login_history_2025_06')
    op.drop_table('login_history_2025_06')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_history_2025_06',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('login_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_login_history_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'login_at', name='login_history_2025_06_pkey')
    )
    op.create_index('login_history_2025_06_user_id_idx', 'login_history_2025_06', ['user_id'], unique=False)
    op.create_index('login_history_2025_06_login_at_idx', 'login_history_2025_06', ['login_at'], unique=False)
    op.create_table('login_history',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('login_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_login_history_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'login_at', name='pk_login_history')
    )
    op.create_index('ix_login_history_user_id', 'login_history', ['user_id'], unique=False)
    op.create_index('ix_login_history_login_at', 'login_history', ['login_at'], unique=False)
    op.create_table('login_history_2025_07',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('login_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_login_history_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'login_at', name='login_history_2025_07_pkey')
    )
    op.create_index('login_history_2025_07_user_id_idx', 'login_history_2025_07', ['user_id'], unique=False)
    op.create_index('login_history_2025_07_login_at_idx', 'login_history_2025_07', ['login_at'], unique=False)
    op.drop_table('social_accounts')
    # ### end Alembic commands ###
